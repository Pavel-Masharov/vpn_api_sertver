import subprocess
from fastapi import APIRouter, Depends, HTTPException
from sqlalchemy.orm import Session
from app.models.models import VPNConfig, User
from app.database import get_db
import requests

router = APIRouter()

def generate_keys():
    try:
        private_key = subprocess.check_output(["wg", "genkey"], text=True).strip()
        public_key = subprocess.check_output(["wg", "pubkey"], input=private_key, text=True).strip()
        return {"private_key": private_key, "public_key": public_key}
    except subprocess.CalledProcessError:
        raise HTTPException(status_code=500, detail="Failed to generate WireGuard keys")

def get_server_public_key():
    try:
        return subprocess.check_output(["wg", "show", "wg0", "public-key"], text=True).strip()
    except subprocess.CalledProcessError:
        raise HTTPException(status_code=500, detail="Failed to retrieve WireGuard server public key")

def get_external_ip():
    try:
        return requests.get("https://api.ipify.org").text.strip()
    except requests.RequestException:
        raise HTTPException(status_code=500, detail="Failed to retrieve external IP")

def add_peer_to_wireguard(public_key: str, address: str):
    try:
        result = subprocess.run(["wg", "show", "wg0", "peers"], capture_output=True, text=True)
        if public_key in result.stdout:
            return  

        subprocess.run(
            ["wg", "set", "wg0", "peer", public_key, "allowed-ips", f"{address}/32"],
            check=True
        )

        subprocess.run(["wg-quick", "save", "wg0"], check=True)
        
        # ?? Добавлено: Перезапуск WireGuard после обновления конфига
        restart_wireguard()

    except subprocess.CalledProcessError:
        raise HTTPException(status_code=500, detail="Failed to add peer to WireGuard")

def restart_wireguard():
    try:
        subprocess.run(["wg-quick", "down", "wg0"], check=True)
        subprocess.run(["wg-quick", "up", "wg0"], check=True)
    except subprocess.CalledProcessError:
        raise HTTPException(status_code=500, detail="Failed to restart WireGuard")

@router.get("/get-config")
def get_config(user_email: str, db: Session = Depends(get_db)):
    external_ip = get_external_ip()
    server_public_key = get_server_public_key()
    user = db.query(User).filter(User.email == user_email).first()

    if not user:
        new_user = User(email=user_email, password="autogenerated")
        db.add(new_user)
        db.commit()
        db.refresh(new_user)
        user = new_user  

    config = db.query(VPNConfig).filter(VPNConfig.user_id == user.id).first()

    if not config:
        keys = generate_keys()
        last_octet = user.id + 1  
        ip_address = f"10.0.0.{last_octet}"

        config = VPNConfig(
            user_id=user.id,
            private_key=keys["private_key"],
            public_key=keys["public_key"],
            address=f"{ip_address}/24",
            dns="8.8.8.8",
            endpoint=f"{external_ip}:443",
            allowed_ips="0.0.0.0/0"
        )
        db.add(config)
        db.commit()
        db.refresh(config)

        add_peer_to_wireguard(config.public_key, ip_address)  # ?? Peer добавляется в WireGuard

    return {
        "private_key": config.private_key,
        "public_key": server_public_key,  
        "address": config.address,
        "dns": config.dns,
        "endpoint": config.endpoint,
        "allowed_ips": config.allowed_ips
    }
